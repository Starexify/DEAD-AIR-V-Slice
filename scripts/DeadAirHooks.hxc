import funkin.modding.module.ScriptedModule;
import funkin.modding.PolymodHandler;
import funkin.save.Save;
import funkin.util.FileUtilSandboxed;
import funkin.util.ReflectUtil;

class DeadAirHooks extends ScriptedModule {
    public var INCL_SONGS:Array<String> = [];

    public var SONG_IDS:Array<String> = [];

    /**
     * Secret Song Array used for randomly choosing a song when trying to play one of the dead air songs
     *
     * @param songId The ID of the song
     * @param chance The chance (0-100) of the song to appear
     *
     *
     * An example of this: <code> SECRET_SONGS.push({ songId: "tmpb2hpbw==", chance: 20 }); </code>
     */
    public var SECRET_SONGS:Array<SecretSong> = [];

    public var CREDITS = [
        { name: "vladosikos17", url: "https://x.com/vladosikos16" },
        { name: "Sandi", url: "https://x.com/334_sandi" },
        { name: "staticfyre", url: "https://x.com/staticfyre" },
        { name: "Jim", url: "https://x.com/jim_comput81367" },
        { name: "Gavinn", url: "https://x.com/Gav1inn7" },
        { name: "OutMance", url: "https://x.com/youarereallyare" },
        { name: "Data", url: "https://x.com/_data5" },
        { name: "funkypop", url: "https://x.com/funkypoppp" },
        { name: "jackoffatron", url: "https://www.youtube.com/watch?v=R9PNKMwVW5M" },
        { name: "icey", url: "https://x.com/Icey_131" },
        { name: "infry", url: "https://x.com/Infry20" },
        { name: "Lucy", url: "https://x.com/TacoGal" },
        { name: "Lock TrapLT", url: "https://x.com/trap_lock" },
        { name: "Pappo", url: "https://x.com/pappo447" },
        { name: "Triki Troy", url: "https://x.com/Triki_Tr0y" }
    ];

    public var pauseMusicPath = "deadpause/deadpause";
    public var inMainMenu = false;
    public var showPepsiMax = true;

    function new() {
        super("DeadAirHooks");
        iterateMods(INCL_SONGS, "includedSongs");
        iterateMods(SONG_IDS, "songIds");
        if (Save.instance.hasBeatenSong("tmpb2hpbw==")) {
            SONG_IDS.unshift("tmpb2hpbw==");
        } else {
            SECRET_SONGS.push({ songId: "tmpb2hpbw==", chance: 20 });
        }
    }

    function iterateMods(array:Array<String>, key:String) {
        for (mod in PolymodHandler.getAllModIds()) {
            var path = "mods/" + mod + "/data/compat/dead-air.json";
            if (FileUtilSandboxed.fileExists(path)) {
                var value = ReflectUtil.getProperty(FileUtilSandboxed.readJSONFromPath(path), key);
                for (song in value) array.push(song);
            }
        }
    }
}

typedef SecretSong = {
    var songId:String;
    var chance:Int;
}