import funkin.data.event.SongEventRegistry;
import funkin.data.song.SongEventDataRaw;
import funkin.modding.base.ScriptedMusicBeatState;
import funkin.modding.events.ScriptEvent;
import funkin.modding.events.SongEventScriptEvent;
import funkin.modding.module.ScriptedModule;
import funkin.play.Countdown;
import funkin.play.PauseSubState;
import funkin.play.PlayState;
import funkin.play.ResultState;
import funkin.util.WindowUtil;

import flixel.FlxG;
import flixel.util.FlxTimer;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import funkin.graphics.FunkinSprite;
import funkin.ui.mainmenu.MainMenuState;

class DeadAirMain extends ScriptedModule {
    var state:PlayState;

    var enterDeadAirMenu = false;

    var includedSongs = ["tmpb2hpbw==", "under the tree", "comatose", "fancy island", "big eater", "shelter", "remembered"];

    function new() {
        super("DeadAirMain");
    }

    override function onSongLoaded(event:SongLoadScriptEvent) {
        if (PlayState.instance == null) return;

        if (includedSongs.contains(PlayState.instance.currentChart.songName)) {
            WindowUtil.setWindowTitle("FNF': Dead Air");

            state = PlayState.instance;

            state.discordRPCAlbum = "https://raw.githubusercontent.com/Starexify/DEAD-AIR-V-Slice/refs/heads/0.6.x/images/freeplay/albumRoll/" + state.currentChart.songName + ".png";

            var events = [
                {type: "FocusCamera", params: {char: 0}},
                {type: "SetCameraBop", params: {intensity: 0}}
            ];

            for (event in events) {
                var songEvent = new SongEventDataRaw(state.songPosition, event.type, event.params);
                var scriptEvent = new SongEventScriptEvent(songEvent);
                if (!scriptEvent.eventCanceled) SongEventRegistry.handleEvent(songEvent);
            }
            //state.moveToResultsScreen(false);
        }
    }

    override function onStateChangeBegin(event:StateChangeScriptEvent) {
        WindowUtil.setWindowTitle("Friday Night Funkin'");
    }

    override function onCountdownStart(event:CountdownScriptEvent) {
        if (includedSongs.contains(PlayState.instance.currentChart.songName)) {
            new FlxTimer().start(0.01, timer -> {
                Countdown.skipCountdown();
            });
        }
    }

    override function onSubStateOpenEnd(event:SubStateScriptEvent) {
        if (Std.isOfType(event.targetState, PauseSubState)) {
            var pauseState:PauseSubState = event.targetState;
            if (includedSongs.contains(PlayState.instance.currentChart.songName)) {
                FlxTween.cancelTweensOf(pauseState.background);
                FlxTween.tween(pauseState.background, {alpha: 1}, 1.2, {ease: FlxEase.quartOut});
            }
            if (PlayState.instance != null && PlayState.instance.currentChart.songName == "shelter") {
                pauseState.metadata.forEach(text -> text.font = Paths.font("shelter.ttf"));
            }
        }

        if (Std.isOfType(event.targetState, ResultState) && includedSongs.contains(PlayState.instance.currentChart.songName)) {
            var resultState:ResultState = event.targetState;
            resultState.members[0].color = resultState.cameraBG.bgColor = 0xFF000000;
/*            var deadAirBg:FunkinSprite = FunkinSprite.create(0, 0, "mainmenu/deadair/ohiogaming");
            deadAirBg.animation.addByPrefix("idle", "ohiogaming21", 24, true);
            deadAirBg.animation.play("idle", true);
            deadAirBg.camera = resultState.cameraBG;
            deadAirBg.zIndex = 30;
            resultState.add(deadAirBg);*/
        }
    }

    override function onUpdate(event:UpdateScriptEvent) {
        if (Std.isOfType(FlxG.state, MainMenuState) && FlxG.keys.justPressed.TAB) {
            enterDeadAirMenu = !enterDeadAirMenu;
            FlxG.switchState(ScriptedMusicBeatState.init("ui.DeadAirMenuState"));
        }
    }

    // Mute Miss Sounds for dead air songs
    override function onNoteMiss(event:NoteScriptEvent) {
        if (PlayState.instance == null) return;
        if (includedSongs.contains(PlayState.instance.currentChart.songName)) event.playSound = false;
    }

    override function onNoteGhostMiss(event:GhostMissNoteScriptEvent) {
        if (PlayState.instance == null) return;
        if (includedSongs.contains(PlayState.instance.currentChart.songName)) event.playSound = false;
    }

    override function onNoteHoldDrop(event:HoldNoteScriptEvent) {
        if (PlayState.instance == null) return;
        if (includedSongs.contains(PlayState.instance.currentChart.songName)) event.playSound = false;
    }
}