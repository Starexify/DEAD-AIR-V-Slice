import funkin.data.event.SongEventRegistry;
import funkin.data.song.SongEventDataRaw;
import funkin.modding.events.ScriptEvent;
import funkin.modding.events.SongEventScriptEvent;
import funkin.modding.module.ScriptedModule;
import funkin.play.PauseSubState;
import funkin.play.PlayState;
import funkin.play.Countdown;

import flixel.util.FlxTimer;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import funkin.util.WindowUtil;

class DeadAirMain extends ScriptedModule {
    var includedSongs = ["tmpb2hpbw==", "under the tree", "comatose", "fancy island", "big eater", "shelter", "remembered"];
    var state:PlayState;

    function new() {
        super("DeadAirMain");
    }

    override function onSongLoaded(event:SongLoadScriptEvent) {
        if (PlayState.instance == null) return;

        if (includedSongs.indexOf(PlayState.instance.currentChart.songName) != -1) {
            WindowUtil.setWindowTitle("FNF': Dead Air");

            state = PlayState.instance;
            var events = [
                {type: "FocusCamera", params: {char: 0}},
                {type: "SetCameraBop", params: {intensity: 0}}
            ];

            for (event in events) {
                var songEvent = new SongEventDataRaw(state.songPosition, event.type, event.params);
                var scriptEvent = new SongEventScriptEvent(songEvent);
                if (!scriptEvent.eventCanceled) SongEventRegistry.handleEvent(songEvent);
            }
        }
    }

    override function onStateChangeBegin(event:StateChangeScriptEvent) {
        WindowUtil.setWindowTitle("Friday Night Funkin'");
    }

    override function onCountdownStart(event:CountdownScriptEvent) {
        if (includedSongs.indexOf(PlayState.instance.currentChart.songName) != -1) {
            new FlxTimer().start(0.01, timer -> {
                Countdown.skipCountdown();
            });
        }
    }

    override function onSubStateOpenEnd(event:SubStateScriptEvent) {
        if (Std.isOfType(event.targetState, PauseSubState)) {
            var pauseState:PauseSubState = event.targetState;
            if (includedSongs.indexOf(PlayState.instance.currentChart.songName) != -1) {
                FlxTween.cancelTweensOf(pauseState.background);
                FlxTween.tween(pauseState.background, {alpha: 1}, 1.2, {ease: FlxEase.quartOut});
            }
            if (PlayState.instance != null && PlayState.instance.currentChart.songName == "shelter") {
                pauseState.metadata.forEach(text -> text.font = Paths.font("shelter.ttf"));
            }
        }
    }
}